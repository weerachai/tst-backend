<?php

/**
 * This is the model base class for the table "StockReceive".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "StockReceive".
 *
 * Columns in table "StockReceive" available as properties of the model,
 * followed by relations of table "StockReceive" available as properties of the model.
 *
 * @property string $RequestNo
 * @property string $DeliverNo
 * @property string $ReceiveNo
 * @property string $SaleId
 * @property string $ReceiveDate
 * @property string $Total
 * @property string $Status
 * @property string $UpdateAt
 *
 * @property ReceiveDetail[] $receiveDetails
 */
abstract class BaseStockReceive extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'StockReceive';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'StockReceive|StockReceives', $n);
	}

	public static function representingColumn() {
		return 'ReceiveNo';
	}

	public function rules() {
		return array(
			array('RequestNo, DeliverNo, ReceiveNo, SaleId, Status', 'length', 'max'=>255),
			array('Total', 'length', 'max'=>10),
			array('ReceiveDate, UpdateAt', 'safe'),
			array('RequestNo, DeliverNo, ReceiveNo, SaleId, ReceiveDate, Total, Status, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('RequestNo, DeliverNo, ReceiveNo, SaleId, ReceiveDate, Total, Status, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'receiveDetails' => array(self::HAS_MANY, 'ReceiveDetail', 'ReceiveNo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'RequestNo' => Yii::t('app', 'Request No'),
			'DeliverNo' => Yii::t('app', 'Deliver No'),
			'ReceiveNo' => Yii::t('app', 'Receive No'),
			'SaleId' => Yii::t('app', 'Sale'),
			'ReceiveDate' => Yii::t('app', 'Receive Date'),
			'Total' => Yii::t('app', 'Total'),
			'Status' => Yii::t('app', 'Status'),
			'UpdateAt' => Yii::t('app', 'Update At'),
			'receiveDetails' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('RequestNo', $this->RequestNo, true);
		$criteria->compare('DeliverNo', $this->DeliverNo, true);
		$criteria->compare('ReceiveNo', $this->ReceiveNo, true);
		$criteria->compare('SaleId', $this->SaleId, true);
		$criteria->compare('ReceiveDate', $this->ReceiveDate, true);
		$criteria->compare('Total', $this->Total, true);
		$criteria->compare('Status', $this->Status, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}