<?php

/**
 * This is the model base class for the table "SaleHistory".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SaleHistory".
 *
 * Columns in table "SaleHistory" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $SaleId
 * @property string $CustomerId
 * @property string $ProductId
 * @property string $SaleAvg
 * @property string $M01
 * @property string $M02
 * @property string $M03
 * @property string $M04
 * @property string $M05
 * @property string $M06
 * @property string $M07
 * @property string $M08
 * @property string $M09
 * @property string $M10
 * @property string $M11
 * @property string $M12
 * @property string $UpdateAt
 *
 */
abstract class BaseSaleHistory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'SaleHistory';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'SaleHistory|SaleHistories', $n);
	}

	public static function representingColumn() {
		return 'SaleId';
	}

	public function rules() {
		return array(
			array('SaleId, CustomerId, ProductId, SaleAvg, M01, M02, M03, M04, M05, M06, M07, M08, M09, M10, M11, M12', 'length', 'max'=>255),
			array('UpdateAt', 'safe'),
			array('SaleId, CustomerId, ProductId, SaleAvg, M01, M02, M03, M04, M05, M06, M07, M08, M09, M10, M11, M12, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('SaleId, CustomerId, ProductId, SaleAvg, M01, M02, M03, M04, M05, M06, M07, M08, M09, M10, M11, M12, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'SaleId' => Yii::t('app', 'Sale'),
			'CustomerId' => Yii::t('app', 'Customer'),
			'ProductId' => Yii::t('app', 'Product'),
			'SaleAvg' => Yii::t('app', 'Sale Avg'),
			'M01' => Yii::t('app', 'M01'),
			'M02' => Yii::t('app', 'M02'),
			'M03' => Yii::t('app', 'M03'),
			'M04' => Yii::t('app', 'M04'),
			'M05' => Yii::t('app', 'M05'),
			'M06' => Yii::t('app', 'M06'),
			'M07' => Yii::t('app', 'M07'),
			'M08' => Yii::t('app', 'M08'),
			'M09' => Yii::t('app', 'M09'),
			'M10' => Yii::t('app', 'M10'),
			'M11' => Yii::t('app', 'M11'),
			'M12' => Yii::t('app', 'M12'),
			'UpdateAt' => Yii::t('app', 'Update At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('SaleId', $this->SaleId, true);
		$criteria->compare('CustomerId', $this->CustomerId, true);
		$criteria->compare('ProductId', $this->ProductId, true);
		$criteria->compare('SaleAvg', $this->SaleAvg, true);
		$criteria->compare('M01', $this->M01, true);
		$criteria->compare('M02', $this->M02, true);
		$criteria->compare('M03', $this->M03, true);
		$criteria->compare('M04', $this->M04, true);
		$criteria->compare('M05', $this->M05, true);
		$criteria->compare('M06', $this->M06, true);
		$criteria->compare('M07', $this->M07, true);
		$criteria->compare('M08', $this->M08, true);
		$criteria->compare('M09', $this->M09, true);
		$criteria->compare('M10', $this->M10, true);
		$criteria->compare('M11', $this->M11, true);
		$criteria->compare('M12', $this->M12, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}