<?php

/**
 * This is the model base class for the table "StockRequest".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "StockRequest".
 *
 * Columns in table "StockRequest" available as properties of the model,
 * followed by relations of table "StockRequest" available as properties of the model.
 *
 * @property string $RequestNo
 * @property string $RequestType
 * @property string $RequestFlag
 * @property string $SaleId
 * @property string $WarehouseId
 * @property string $WarehouseName
 * @property string $WarehouseType
 * @property string $RequestDate
 * @property string $Total
 * @property string $Status
 * @property string $UpdateAt
 *
 * @property RequestDetail[] $requestDetails
 */
abstract class BaseStockRequest extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'StockRequest';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'StockRequest|StockRequests', $n);
	}

	public static function representingColumn() {
		return 'SaleId';
	}

	public function rules() {
		return array(
			array('RequestNo, SaleId', 'required'),
			array('RequestNo, RequestType, RequestFlag, SaleId, WarehouseId, WarehouseName, WarehouseType, Status', 'length', 'max'=>255),
			array('Total', 'length', 'max'=>10),
			array('RequestDate, UpdateAt', 'safe'),
			array('RequestType, RequestFlag, WarehouseId, WarehouseName, WarehouseType, RequestDate, Total, Status, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('RequestNo, RequestType, RequestFlag, SaleId, WarehouseId, WarehouseName, WarehouseType, RequestDate, Total, Status, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'requestDetails' => array(self::HAS_MANY, 'RequestDetail', 'RequestNo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'RequestNo' => Yii::t('app', 'Request No'),
			'RequestType' => Yii::t('app', 'Request Type'),
			'RequestFlag' => Yii::t('app', 'Request Flag'),
			'SaleId' => Yii::t('app', 'Sale'),
			'WarehouseId' => Yii::t('app', 'Warehouse'),
			'WarehouseName' => Yii::t('app', 'Warehouse Name'),
			'WarehouseType' => Yii::t('app', 'Warehouse Type'),
			'RequestDate' => Yii::t('app', 'Request Date'),
			'Total' => Yii::t('app', 'Total'),
			'Status' => Yii::t('app', 'Status'),
			'UpdateAt' => Yii::t('app', 'Update At'),
			'requestDetails' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('RequestNo', $this->RequestNo, true);
		$criteria->compare('RequestType', $this->RequestType, true);
		$criteria->compare('RequestFlag', $this->RequestFlag, true);
		$criteria->compare('SaleId', $this->SaleId, true);
		$criteria->compare('WarehouseId', $this->WarehouseId, true);
		$criteria->compare('WarehouseName', $this->WarehouseName, true);
		$criteria->compare('WarehouseType', $this->WarehouseType, true);
		$criteria->compare('RequestDate', $this->RequestDate, true);
		$criteria->compare('Total', $this->Total, true);
		$criteria->compare('Status', $this->Status, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}