<?php

/**
 * This is the model base class for the table "DiscDetail".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DiscDetail".
 *
 * Columns in table "DiscDetail" available as properties of the model,
 * followed by relations of table "DiscDetail" available as properties of the model.
 *
 * @property string $OrderNo
 * @property string $PromotionId
 * @property string $DiscBaht
 * @property integer $DiscPer1
 * @property integer $DiscPer2
 * @property integer $DiscPer3
 * @property string $DiscTotal
 * @property string $UpdateAt
 *
 * @property ProductOrder $orderNo
 */
abstract class BaseDiscDetail extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'DiscDetail';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DiscDetail|DiscDetails', $n);
	}

	public static function representingColumn() {
		return 'PromotionId';
	}

	public function rules() {
		return array(
			array('DiscPer1, DiscPer2, DiscPer3', 'numerical', 'integerOnly'=>true),
			array('OrderNo, PromotionId', 'length', 'max'=>255),
			array('DiscBaht, DiscTotal', 'length', 'max'=>20),
			array('UpdateAt', 'safe'),
			array('OrderNo, PromotionId, DiscBaht, DiscPer1, DiscPer2, DiscPer3, DiscTotal, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('OrderNo, PromotionId, DiscBaht, DiscPer1, DiscPer2, DiscPer3, DiscTotal, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'orderNo' => array(self::BELONGS_TO, 'ProductOrder', 'OrderNo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'OrderNo' => null,
			'PromotionId' => Yii::t('app', 'Promotion'),
			'DiscBaht' => Yii::t('app', 'Disc Baht'),
			'DiscPer1' => Yii::t('app', 'Disc Per1'),
			'DiscPer2' => Yii::t('app', 'Disc Per2'),
			'DiscPer3' => Yii::t('app', 'Disc Per3'),
			'DiscTotal' => Yii::t('app', 'Disc Total'),
			'UpdateAt' => Yii::t('app', 'Update At'),
			'orderNo' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('OrderNo', $this->OrderNo);
		$criteria->compare('PromotionId', $this->PromotionId, true);
		$criteria->compare('DiscBaht', $this->DiscBaht, true);
		$criteria->compare('DiscPer1', $this->DiscPer1);
		$criteria->compare('DiscPer2', $this->DiscPer2);
		$criteria->compare('DiscPer3', $this->DiscPer3);
		$criteria->compare('DiscTotal', $this->DiscTotal, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}