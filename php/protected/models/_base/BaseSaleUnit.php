<?php

/**
 * This is the model base class for the table "SaleUnit".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SaleUnit".
 *
 * Columns in table "SaleUnit" available as properties of the model,
 * followed by relations of table "SaleUnit" available as properties of the model.
 *
 * @property string $SaleId
 * @property string $SaleName
 * @property string $SaleType
 * @property string $EmployeeId
 * @property string $AreaId
 *
 * @property ControlNo[] $controlNos
 * @property Device $device
 * @property DeviceSetting $deviceSetting
 * @property SaleArea $area
 * @property Employee $employee
 */
abstract class BaseSaleUnit extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'SaleUnit';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'SaleUnit|SaleUnits', $n);
	}

	public static function representingColumn() {
		return 'SaleName';
	}

	public function rules() {
		return array(
			array('SaleId, SaleName, SaleType', 'required'),
			array('SaleId, SaleName, SaleType, EmployeeId, AreaId', 'length', 'max'=>255),
			array('EmployeeId, AreaId', 'default', 'setOnEmpty' => true, 'value' => null),
			array('SaleId, SaleName, SaleType, EmployeeId, AreaId', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'controlNos' => array(self::HAS_MANY, 'ControlNo', 'SaleId'),
			'device' => array(self::HAS_ONE, 'Device', 'SaleId'),
			'deviceSetting' => array(self::HAS_ONE, 'DeviceSetting', 'SaleId'),
			'area' => array(self::BELONGS_TO, 'SaleArea', 'AreaId'),
			'employee' => array(self::BELONGS_TO, 'Employee', 'EmployeeId'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'SaleId' => Yii::t('app', 'Sale'),
			'SaleName' => Yii::t('app', 'Sale Name'),
			'SaleType' => Yii::t('app', 'Sale Type'),
			'EmployeeId' => null,
			'AreaId' => null,
			'controlNos' => null,
			'device' => null,
			'deviceSetting' => null,
			'area' => null,
			'employee' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('SaleId', $this->SaleId, true);
		$criteria->compare('SaleName', $this->SaleName, true);
		$criteria->compare('SaleType', $this->SaleType, true);
		$criteria->compare('EmployeeId', $this->EmployeeId);
		$criteria->compare('AreaId', $this->AreaId);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}