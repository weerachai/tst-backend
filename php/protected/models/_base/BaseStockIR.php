<?php

/**
 * This is the model base class for the table "StockIR".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "StockIR".
 *
 * Columns in table "StockIR" available as properties of the model,
 * followed by relations of table "StockIR" available as properties of the model.
 *
 * @property string $IRNo
 * @property string $SaleId
 * @property string $IRDate
 * @property string $Total
 * @property string $Status
 * @property string $UpdateAt
 *
 * @property IRDetail[] $iRDetails
 * @property RequestIR[] $requestIRs
 */
abstract class BaseStockIR extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'StockIR';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'StockIR|StockIRs', $n);
	}

	public static function representingColumn() {
		return 'IRNo';
	}

	public function rules() {
		return array(
			array('IRNo, SaleId, Status', 'length', 'max'=>255),
			array('Total', 'length', 'max'=>10),
			array('IRDate, UpdateAt', 'safe'),
			array('IRNo, SaleId, IRDate, Total, Status, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('IRNo, SaleId, IRDate, Total, Status, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'iRDetails' => array(self::HAS_MANY, 'IRDetail', 'IRNo'),
			'requestIRs' => array(self::HAS_MANY, 'RequestIR', 'IRNo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'IRNo' => Yii::t('app', 'Irno'),
			'SaleId' => Yii::t('app', 'Sale'),
			'IRDate' => Yii::t('app', 'Irdate'),
			'Total' => Yii::t('app', 'Total'),
			'Status' => Yii::t('app', 'Status'),
			'UpdateAt' => Yii::t('app', 'Update At'),
			'iRDetails' => null,
			'requestIRs' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('IRNo', $this->IRNo, true);
		$criteria->compare('SaleId', $this->SaleId, true);
		$criteria->compare('IRDate', $this->IRDate, true);
		$criteria->compare('Total', $this->Total, true);
		$criteria->compare('Status', $this->Status, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}