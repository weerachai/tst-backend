<?php

/**
 * This is the model base class for the table "Promotion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Promotion".
 *
 * Columns in table "Promotion" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $PromotionGroup
 * @property string $PromotionId
 * @property string $StartDate
 * @property string $EndDate
 * @property string $PromotionType
 * @property string $ProductOrGrpId
 * @property string $MinAmount
 * @property integer $MinSku
 * @property integer $MinQty
 * @property string $Pack
 * @property string $DiscBaht
 * @property string $DiscPerAmount
 * @property string $DiscPerQty
 * @property string $DiscPer1
 * @property string $DiscPer2
 * @property string $DiscPer3
 * @property string $FreeType
 * @property string $FreeProductOrGrpId
 * @property integer $FreeQty
 * @property string $FreePack
 * @property string $FreePerAmount
 * @property integer $FreePerQty
 * @property string $FreeBaht
 * @property string $Formula
 * @property string $UpdateAt
 *
 */
abstract class BasePromotion extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Promotion';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Promotion|Promotions', $n);
	}

	public static function representingColumn() {
		return 'PromotionGroup';
	}

	public function rules() {
		return array(
			array('PromotionGroup, PromotionId, StartDate, EndDate, PromotionType, Formula', 'required'),
			array('MinSku, MinQty, FreeQty, FreePerQty', 'numerical', 'integerOnly'=>true),
			array('PromotionGroup, PromotionId, PromotionType, ProductOrGrpId, Pack, FreeType, FreeProductOrGrpId, FreePack, Formula', 'length', 'max'=>255),
			array('MinAmount, DiscBaht, DiscPerAmount, DiscPerQty, DiscPer1, DiscPer2, DiscPer3, FreePerAmount, FreeBaht', 'length', 'max'=>20),
			array('UpdateAt', 'safe'),
			array('ProductOrGrpId, MinAmount, MinSku, MinQty, Pack, DiscBaht, DiscPerAmount, DiscPerQty, DiscPer1, DiscPer2, DiscPer3, FreeType, FreeProductOrGrpId, FreeQty, FreePack, FreePerAmount, FreePerQty, FreeBaht, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('PromotionGroup, PromotionId, StartDate, EndDate, PromotionType, ProductOrGrpId, MinAmount, MinSku, MinQty, Pack, DiscBaht, DiscPerAmount, DiscPerQty, DiscPer1, DiscPer2, DiscPer3, FreeType, FreeProductOrGrpId, FreeQty, FreePack, FreePerAmount, FreePerQty, FreeBaht, Formula, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'PromotionGroup' => Yii::t('app', 'Promotion Group'),
			'PromotionId' => Yii::t('app', 'Promotion'),
			'StartDate' => Yii::t('app', 'Start Date'),
			'EndDate' => Yii::t('app', 'End Date'),
			'PromotionType' => Yii::t('app', 'Promotion Type'),
			'ProductOrGrpId' => Yii::t('app', 'Product Or Grp'),
			'MinAmount' => Yii::t('app', 'Min Amount'),
			'MinSku' => Yii::t('app', 'Min Sku'),
			'MinQty' => Yii::t('app', 'Min Qty'),
			'Pack' => Yii::t('app', 'Pack'),
			'DiscBaht' => Yii::t('app', 'Disc Baht'),
			'DiscPerAmount' => Yii::t('app', 'Disc Per Amount'),
			'DiscPerQty' => Yii::t('app', 'Disc Per Qty'),
			'DiscPer1' => Yii::t('app', 'Disc Per1'),
			'DiscPer2' => Yii::t('app', 'Disc Per2'),
			'DiscPer3' => Yii::t('app', 'Disc Per3'),
			'FreeType' => Yii::t('app', 'Free Type'),
			'FreeProductOrGrpId' => Yii::t('app', 'Free Product Or Grp'),
			'FreeQty' => Yii::t('app', 'Free Qty'),
			'FreePack' => Yii::t('app', 'Free Pack'),
			'FreePerAmount' => Yii::t('app', 'Free Per Amount'),
			'FreePerQty' => Yii::t('app', 'Free Per Qty'),
			'FreeBaht' => Yii::t('app', 'Free Baht'),
			'Formula' => Yii::t('app', 'Formula'),
			'UpdateAt' => Yii::t('app', 'Update At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('PromotionGroup', $this->PromotionGroup, true);
		$criteria->compare('PromotionId', $this->PromotionId, true);
		$criteria->compare('StartDate', $this->StartDate, true);
		$criteria->compare('EndDate', $this->EndDate, true);
		$criteria->compare('PromotionType', $this->PromotionType, true);
		$criteria->compare('ProductOrGrpId', $this->ProductOrGrpId, true);
		$criteria->compare('MinAmount', $this->MinAmount, true);
		$criteria->compare('MinSku', $this->MinSku);
		$criteria->compare('MinQty', $this->MinQty);
		$criteria->compare('Pack', $this->Pack, true);
		$criteria->compare('DiscBaht', $this->DiscBaht, true);
		$criteria->compare('DiscPerAmount', $this->DiscPerAmount, true);
		$criteria->compare('DiscPerQty', $this->DiscPerQty, true);
		$criteria->compare('DiscPer1', $this->DiscPer1, true);
		$criteria->compare('DiscPer2', $this->DiscPer2, true);
		$criteria->compare('DiscPer3', $this->DiscPer3, true);
		$criteria->compare('FreeType', $this->FreeType, true);
		$criteria->compare('FreeProductOrGrpId', $this->FreeProductOrGrpId, true);
		$criteria->compare('FreeQty', $this->FreeQty);
		$criteria->compare('FreePack', $this->FreePack, true);
		$criteria->compare('FreePerAmount', $this->FreePerAmount, true);
		$criteria->compare('FreePerQty', $this->FreePerQty);
		$criteria->compare('FreeBaht', $this->FreeBaht, true);
		$criteria->compare('Formula', $this->Formula, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}