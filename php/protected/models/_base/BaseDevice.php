<?php

/**
 * This is the model base class for the table "Device".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Device".
 *
 * Columns in table "Device" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $DeviceId
 * @property string $DeviceKey
 * @property string $SaleId
 * @property string $Username
 * @property string $Password
 * @property string $UpdateAt
 *
 */
abstract class BaseDevice extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Device';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Device|Devices', $n);
	}

	public static function representingColumn() {
		return 'DeviceId';
	}

	public function rules() {
		return array(
			array('DeviceId, SaleId, Username', 'required'),
			array('DeviceId, DeviceKey, SaleId, Username, Password', 'length', 'max'=>255),
			array('UpdateAt', 'safe'),
			array('DeviceKey, Password, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('DeviceId, DeviceKey, SaleId, Username, Password, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'DeviceId' => Yii::t('app', 'Device'),
			'DeviceKey' => Yii::t('app', 'Device Key'),
			'SaleId' => Yii::t('app', 'Sale'),
			'Username' => Yii::t('app', 'Username'),
			'Password' => Yii::t('app', 'Password'),
			'UpdateAt' => Yii::t('app', 'Update At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('DeviceId', $this->DeviceId, true);
		$criteria->compare('DeviceKey', $this->DeviceKey, true);
		$criteria->compare('SaleId', $this->SaleId, true);
		$criteria->compare('Username', $this->Username, true);
		$criteria->compare('Password', $this->Password, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}