<?php

/**
 * This is the model base class for the table "ProductExchange".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProductExchange".
 *
 * Columns in table "ProductExchange" available as properties of the model,
 * followed by relations of table "ProductExchange" available as properties of the model.
 *
 * @property string $ExchangeNo
 * @property string $SaleId
 * @property string $CustomerId
 * @property string $ExchangeDate
 * @property string $InTotal
 * @property string $OutTotal
 * @property string $Paid
 * @property string $CashFlag
 * @property string $Status
 * @property string $UpdateAt
 *
 * @property ExchangeInDetail[] $exchangeInDetails
 * @property ExchangeOutDetail[] $exchangeOutDetails
 */
abstract class BaseProductExchange extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'ProductExchange';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ProductExchange|ProductExchanges', $n);
	}

	public static function representingColumn() {
		return 'ExchangeNo';
	}

	public function rules() {
		return array(
			array('ExchangeNo, SaleId, CustomerId, Status', 'length', 'max'=>255),
			array('InTotal, OutTotal, Paid', 'length', 'max'=>20),
			array('CashFlag', 'length', 'max'=>1),
			array('ExchangeDate, UpdateAt', 'safe'),
			array('ExchangeNo, SaleId, CustomerId, ExchangeDate, InTotal, OutTotal, Paid, CashFlag, Status, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ExchangeNo, SaleId, CustomerId, ExchangeDate, InTotal, OutTotal, Paid, CashFlag, Status, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'exchangeInDetails' => array(self::HAS_MANY, 'ExchangeInDetail', 'ExchangeNo'),
			'exchangeOutDetails' => array(self::HAS_MANY, 'ExchangeOutDetail', 'ExchangeNo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ExchangeNo' => Yii::t('app', 'Exchange No'),
			'SaleId' => Yii::t('app', 'Sale'),
			'CustomerId' => Yii::t('app', 'Customer'),
			'ExchangeDate' => Yii::t('app', 'Exchange Date'),
			'InTotal' => Yii::t('app', 'In Total'),
			'OutTotal' => Yii::t('app', 'Out Total'),
			'Paid' => Yii::t('app', 'Paid'),
			'CashFlag' => Yii::t('app', 'Cash Flag'),
			'Status' => Yii::t('app', 'Status'),
			'UpdateAt' => Yii::t('app', 'Update At'),
			'exchangeInDetails' => null,
			'exchangeOutDetails' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ExchangeNo', $this->ExchangeNo, true);
		$criteria->compare('SaleId', $this->SaleId, true);
		$criteria->compare('CustomerId', $this->CustomerId, true);
		$criteria->compare('ExchangeDate', $this->ExchangeDate, true);
		$criteria->compare('InTotal', $this->InTotal, true);
		$criteria->compare('OutTotal', $this->OutTotal, true);
		$criteria->compare('Paid', $this->Paid, true);
		$criteria->compare('CashFlag', $this->CashFlag, true);
		$criteria->compare('Status', $this->Status, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}