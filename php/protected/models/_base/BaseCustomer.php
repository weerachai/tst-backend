<?php

/**
 * This is the model base class for the table "Customer".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Customer".
 *
 * Columns in table "Customer" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $CustomerId
 * @property string $SaleId
 * @property string $Title
 * @property string $CustomerName
 * @property string $Type
 * @property string $Trip1
 * @property string $Trip2
 * @property string $Trip3
 * @property string $Province
 * @property string $District
 * @property string $SubDistrict
 * @property string $ZipCode
 * @property string $AddrNo
 * @property string $Moo
 * @property string $Village
 * @property string $Soi
 * @property string $Road
 * @property string $Phone
 * @property string $ContactPerson
 * @property integer $CreditTerm
 * @property string $CreditLimit
 * @property string $OverCreditType
 * @property string $Due
 * @property string $PoseCheck
 * @property string $ReturnCheck
 * @property string $NewFlag
 * @property string $DeleteFlag
 * @property string $UpdateAt
 *
 */
abstract class BaseCustomer extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Customer';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Customer|Customers', $n);
	}

	public static function representingColumn() {
		return 'CustomerName';
	}

	public function rules() {
		return array(
			array('CustomerName', 'required'),
			array('CreditTerm', 'numerical', 'integerOnly'=>true),
			array('CustomerId, SaleId, Title, CustomerName, Type, Trip1, Trip2, Trip3, Province, District, SubDistrict, ZipCode, AddrNo, Moo, Village, Soi, Road, Phone, ContactPerson, OverCreditType', 'length', 'max'=>255),
			array('CreditLimit, Due, PoseCheck, ReturnCheck', 'length', 'max'=>20),
			array('NewFlag, DeleteFlag', 'length', 'max'=>1),
			array('UpdateAt', 'safe'),
			array('CustomerId, SaleId, Title, Type, Trip1, Trip2, Trip3, Province, District, SubDistrict, ZipCode, AddrNo, Moo, Village, Soi, Road, Phone, ContactPerson, CreditTerm, CreditLimit, OverCreditType, Due, PoseCheck, ReturnCheck, NewFlag, DeleteFlag, UpdateAt', 'default', 'setOnEmpty' => true, 'value' => null),
			array('CustomerId, SaleId, Title, CustomerName, Type, Trip1, Trip2, Trip3, Province, District, SubDistrict, ZipCode, AddrNo, Moo, Village, Soi, Road, Phone, ContactPerson, CreditTerm, CreditLimit, OverCreditType, Due, PoseCheck, ReturnCheck, NewFlag, DeleteFlag, UpdateAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'CustomerId' => Yii::t('app', 'Customer'),
			'SaleId' => Yii::t('app', 'Sale'),
			'Title' => Yii::t('app', 'Title'),
			'CustomerName' => Yii::t('app', 'Customer Name'),
			'Type' => Yii::t('app', 'Type'),
			'Trip1' => Yii::t('app', 'Trip1'),
			'Trip2' => Yii::t('app', 'Trip2'),
			'Trip3' => Yii::t('app', 'Trip3'),
			'Province' => Yii::t('app', 'Province'),
			'District' => Yii::t('app', 'District'),
			'SubDistrict' => Yii::t('app', 'Sub District'),
			'ZipCode' => Yii::t('app', 'Zip Code'),
			'AddrNo' => Yii::t('app', 'Addr No'),
			'Moo' => Yii::t('app', 'Moo'),
			'Village' => Yii::t('app', 'Village'),
			'Soi' => Yii::t('app', 'Soi'),
			'Road' => Yii::t('app', 'Road'),
			'Phone' => Yii::t('app', 'Phone'),
			'ContactPerson' => Yii::t('app', 'Contact Person'),
			'CreditTerm' => Yii::t('app', 'Credit Term'),
			'CreditLimit' => Yii::t('app', 'Credit Limit'),
			'OverCreditType' => Yii::t('app', 'Over Credit Type'),
			'Due' => Yii::t('app', 'Due'),
			'PoseCheck' => Yii::t('app', 'Pose Check'),
			'ReturnCheck' => Yii::t('app', 'Return Check'),
			'NewFlag' => Yii::t('app', 'New Flag'),
			'DeleteFlag' => Yii::t('app', 'Delete Flag'),
			'UpdateAt' => Yii::t('app', 'Update At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('CustomerId', $this->CustomerId, true);
		$criteria->compare('SaleId', $this->SaleId, true);
		$criteria->compare('Title', $this->Title, true);
		$criteria->compare('CustomerName', $this->CustomerName, true);
		$criteria->compare('Type', $this->Type, true);
		$criteria->compare('Trip1', $this->Trip1, true);
		$criteria->compare('Trip2', $this->Trip2, true);
		$criteria->compare('Trip3', $this->Trip3, true);
		$criteria->compare('Province', $this->Province, true);
		$criteria->compare('District', $this->District, true);
		$criteria->compare('SubDistrict', $this->SubDistrict, true);
		$criteria->compare('ZipCode', $this->ZipCode, true);
		$criteria->compare('AddrNo', $this->AddrNo, true);
		$criteria->compare('Moo', $this->Moo, true);
		$criteria->compare('Village', $this->Village, true);
		$criteria->compare('Soi', $this->Soi, true);
		$criteria->compare('Road', $this->Road, true);
		$criteria->compare('Phone', $this->Phone, true);
		$criteria->compare('ContactPerson', $this->ContactPerson, true);
		$criteria->compare('CreditTerm', $this->CreditTerm);
		$criteria->compare('CreditLimit', $this->CreditLimit, true);
		$criteria->compare('OverCreditType', $this->OverCreditType, true);
		$criteria->compare('Due', $this->Due, true);
		$criteria->compare('PoseCheck', $this->PoseCheck, true);
		$criteria->compare('ReturnCheck', $this->ReturnCheck, true);
		$criteria->compare('NewFlag', $this->NewFlag, true);
		$criteria->compare('DeleteFlag', $this->DeleteFlag, true);
		$criteria->compare('UpdateAt', $this->UpdateAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}